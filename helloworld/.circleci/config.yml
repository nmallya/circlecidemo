version: 2
jobs:
  build:
    # working_directory: ~/helloworld
    docker:
      - image: circleci/ruby:2.4.1-node
        # environment:
        #   RAILS_ENV: test
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          key: helloworld-{{ checksum "Gemfile.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: helloworld-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundle exec rspec


  # push to Google Container Registry (GCR)
  push-dev-server:
    docker:
      - image: turbinelabs/gcloud-build:0.12.4
    environment:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - checkout
      - setup_remote_docker
      - run: openrc boot
      - run: docker build -t helloworldapp -f ./Dockerfile.gcloud .
      - run: docker tag helloworldapp gcr.io/circle-agent/helloworldapp:$CIRCLE_SHA1
      - run: gcloud docker -- push gcr.io/circle-agent/helloworldapp:$CIRCLE_SHA1

  # Deploy to GKE
  deploy-dev-server:
    docker:
      - image: turbinelabs/gcloud-build:0.12.4
    steps:
      - checkout
      - run: openrc boot
      # - run: chmod +x ./.circleci/deploy_qa.sh
      # - run: ./.circleci/deploy_qa.sh

  # push-staging-server:
  #   docker:
  #     - image: turbinelabs/gcloud-build:0.12.4
  #   environment:
  #     DEBIAN_FRONTEND: noninteractive
  #     PROJECT: s4-core-staging
  #     ZONE: us-central1-b
  #     CLUSTER_NAME: sema4-staging-cluster
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - run: openrc boot
  #     - run: docker build -t sema4app -f ./kube/staging/Dockerfile.gcloud .
  #     - run: docker tag sema4app gcr.io/s4-core-staging/sema4app:$CIRCLE_SHA1
  #     - run: echo ${ACCT_AUTH} | base64 -d > ${HOME}/gcp-key.json
  #     - run: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
  #     - run: gcloud config set project $PROJECT
  #     - run: gcloud container clusters get-credentials $CLUSTER_NAME --zone $ZONE --project $PROJECT
  #     # --scopes https://www.googleapis.com/auth/trace.append
  #     - run: gcloud docker -- push gcr.io/s4-core-staging/sema4app:$CIRCLE_SHA1
  #
  # # Deploy to GKE
  # deploy-staging-server:
  #   docker:
  #     - image: turbinelabs/gcloud-build:0.12.4
  #   steps:
  #     - checkout
  #     - run: openrc boot
  #     - run: chmod +x ./.circleci/deploy_staging.sh
  #     - run: ./.circleci/deploy_staging.sh
  #
  # push-smoketest-server:
  #   docker:
  #     - image: turbinelabs/gcloud-build:0.12.4
  #   environment:
  #     DEBIAN_FRONTEND: noninteractive
  #     PROJECT: s4-core-prod
  #     ZONE: us-central1-b
  #     CLUSTER_NAME: sema4-production-cluster
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - run: openrc boot
  #     - run: docker build -t sema4app -f ./kube/production/Dockerfile.gcloud .
  #     - run: docker tag sema4app gcr.io/s4-core-prod/sema4app:$CIRCLE_SHA1
  #     - run: echo ${PRODUCTION_ACCT_AUTH} | base64 -d > ${HOME}/gcp-key.json
  #     - run: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
  #     - run: gcloud config set project $PROJECT
  #     - run: gcloud container clusters get-credentials $CLUSTER_NAME --zone $ZONE --project $PROJECT
  #     - run: gcloud docker -- push gcr.io/s4-core-prod/sema4app:$CIRCLE_SHA1
  #
  # # Deploy to GKE
  # deploy-smoketest-server:
  #   docker:
  #     - image: turbinelabs/gcloud-build:0.12.4
  #   steps:
  #     - checkout
  #     - run: openrc boot
  #     - run: chmod +x ./.circleci/deploy_smoketest.sh
  #     - run: ./.circleci/deploy_smoketest.sh

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
                - master
  dev_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - develop
                - master
      - push-dev-server:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - master
      - deploy-dev-server:
          requires:
            - push-dev-server
          filters:
            branches:
              only:
                - develop
                - master
  staging_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master2
      - push-staging-server:
          requires:
            - build
          filters:
            branches:
              only:
                - master2
      - deploy-staging-server:
          requires:
            - push-staging-server
          filters:
            branches:
              only:
                - master2

  smoketest_deploy:
    jobs:
      - build:
          filters:
            tags:
              only:
                - /v1.0.*/
            branches:
              ignore: /.*/
      - push-smoketest-server:
          requires:
            - build
          filters:
            tags:
              only:
                - /v1.0.*/
      - deploy-smoketest-server:
          requires:
            - push-smoketest-server
          filters:
            tags:
              only:
                - /v1.0.*/
